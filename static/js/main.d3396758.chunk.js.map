{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovies","title","url","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setMovie","setTitle","searchMovie","a","movieFound","handleFormSubmit","event","preventDefault","Response","onSubmit","type","id","placeholder","value","onChange","target","onClick","App","setMovies","addedMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3396758.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=7a30315f&t=';\n\nexport const request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getMovies = (title: string) => {\n  return request(title);\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nimport { Movie } from '../../types/Movie';\n\nimport { getMovies } from '../../api/api';\n\ntype Props = {\n  addMovie: (addedMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n\n  const searchMovie = async () => {\n    const movieFound = await getMovies(title);\n\n    setMovie(movieFound);\n  };\n\n  const handleFormSubmit = async (event: ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie?.Response === 'True') {\n      addMovie(movie);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFormSubmit}>\n        <div className=\"field\">\n          Movie title\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={movie?.Response === 'False'\n                ? 'input is-danger'\n                : 'input'}\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n            />\n          </div>\n\n          {movie?.Response === 'False'\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie?.Response === 'True' && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (addedMovie: Movie) => {\n    if (movies.find(movie => movie.imdbID === addedMovie.imdbID)) {\n      return;\n    }\n\n    setMovies([...movies, addedMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}